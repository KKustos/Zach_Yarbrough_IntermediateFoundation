//Sigma

function sigma(num){
    var sum=0;
    for (var i=0; i<=num; i++) {
    sum += i;
    }
    console.log(sum);
}
sigma(4);

//Factorial

function factorial(num){
    var sum=1;
    for (var i=1; i<=num; i++) {
    sum *= i;
    }
    console.log(sum);
}
factorial(3);

//Fibonacci

function fibonacci(num){
    var arr=[]; 
    arr[0]=0;
    arr[1]=1;
    for(var i=2; i<=num; i++){
        arr[i]=arr[i-1]+arr[i-2];
        console.log(arr[i]);
    }
}
fibonacci(15);

//Array:Second-to-Last

//I could not figure out null.

function secondToLast(arr){
    return (arr[arr.length-2])
}
secondToLast([1,2,3]);
secondToLast([1]);

//Array:Nth-to-Last

//I could not figure out null.

function nthToLast(arr,num){
    return (arr.length+1-num);
}
nthToLast([1,2,3,4,5,6,7,8,9],2);
nthToLast([1],2);

//Array:Second-Largest

//I could not figure out null.

function secondLargest(arr){
    var first=0;
    var second=0;
    for(i=0; i<arr.length; i++){
        if(arr[i] > first){
            second=first;
            first=arr[i];
        }
        else if(arr[i] > second){
            second=arr[i];
        }
    }
    return second;
}
secondLargest([42,1,4,3.14,7]);

//Double Trouble

function doubleTrouble(arr){
    var x=[];
    for(i=0; i<arr.length; i++){
        x.push(arr[i]);
        x.push(arr[i]);
    }
    arr=x;
    return arr;
}
doubleTrouble([4, "Ulysses", 42, false]);

//Fibonacci with Recursion

function fibr(num){
    if(num==0 || num==1){
        return num;
    }
    return fibr(num-2)+fibr(num-1);
}
fibr(10);